plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.cloud.tools.jib' version '3.4.0' // For Docker image building
}

group = 'com.unitech'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.0")
	set('jjwtVersion', "0.12.3")
}

dependencies {
	//Spring boot starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//Spring cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	//jwt
	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

	//DB
	runtimeOnly 'org.postgresql:postgresql'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//development tool
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	//Swagger
	implementation("org.springdoc:springdoc-openapi-ui:1.8.0")

	//Google Auth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}


// For building Docker images (optional)
jib {
	from {
		image = 'eclipse-temurin:17-jre-jammy'
	}
	to {
		image = "unitech/auth-service:${version}"
	}
	container {
		ports = ['8081']
	}
}
